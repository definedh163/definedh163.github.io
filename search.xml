<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>个人总结</title>
      <link href="/2020/07/28/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
      <url>/2020/07/28/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h1 id="个人总结"><a href="#个人总结" class="headerlink" title="个人总结"></a>个人总结</h1><h2 id="iview-table-实时数据更新"><a href="#iview-table-实时数据更新" class="headerlink" title="iview table 实时数据更新"></a>iview table 实时数据更新</h2><hr><p><img src="/img/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%931.png" alt="Audits - Lighthouse" loading="lazy"> <em>Demo</em></p><p><img src="/img/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%931%E5%81%87%E6%95%B0%E6%8D%AEcolumns.png" alt="Audits - Lighthouse" loading="lazy"> <em>假数据 columns</em></p><p><img src="/img/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%931%E5%81%87%E6%95%B0%E6%8D%AEtableData.png" alt="Audits - Lighthouse" loading="lazy"> <em>假数据 tableData</em></p><pre>  <code class="language-js">  //这个函数主要作用是实现iview table 实时数据更新   getTableData() {      var newColumns = JSON.parse(JSON.stringify(this.columns));      var array = [];      for (let k in newColumns) {        let {key} = newColumns[k]        if (          key != 'dataTime' &&          key != 'enterpriseName' &&          key != 'pointName'        ) {          //排除掉一些无需render 的数据字段          for (let i in newColumns[k]) {            if (i == 'key') {              //排除除了 key 的所有其他字段              let item = {                title: this.columns[k].title,                align: 'center',                render: (h, params) => {                  return h('InputNumber', {                    props: {                      value: Number(params.row[newColumns[k][i]])                    },                    on: {                      'on-change': event => {                        if (event) {                          for (let j in params.row) {                            if (j == newColumns[k][i]) {                              params.row[j] = String(event);                              //ajax 将这条row 传给后台 然后刷新表单数据                              this.$Message.success('修改成功');                              console.log('修改后的row', params.row);                            } else {                              continue;                            }                          }                        }                      }                    }                  });                }              };              array.push(item);            } else {              continue;            }          }        } else {          //将 排除掉的字段从新加进来          array.push(this.columns[k]);        }      }      //赋值 (注意点: 如果没有赋值这个操作上面item 的render params是拿不到row的数据的)      this.columns = array;    },  </code></pre><hr><h2 id="menu-鉴权增删匹配"><a href="#menu-鉴权增删匹配" class="headerlink" title="menu 鉴权增删匹配"></a>menu 鉴权增删匹配</h2><hr><pre>  <code class="language-js"> getUserMenuData(menuData(组件完整menu数组), routeTable(筛选后的路由表)) {      for (var i = 0; i < menuData.length; i++) {        if (menuData[i].children) {          //循环二级菜单 和 路由表路径对比,得出不同项          for (var j = 0; j < menuData[i].children.length; j++) {            var obj = menuData[i].children[j]            var childrenPath = obj.to            var isExist = false            for (var k = 0; k < routeTable.length; k++) {              var Obj = routeTable[k]              var routeTablePath = Obj.path              if (childrenPath == routeTablePath) {                isExist = true                break              }            }            if (!isExist) {              menuData[i].children.splice(j, 1) //将无权限menu删除              j--            }          }        }        if (menuData[i].children.length == 0) {          //如果1级菜单的children没有menu,则删掉这个1级菜单          menuData.splice(i, 1)          i--        }else{          //否则跳过          continue;        }      }      return menuData //返回最后得到的menu列表    }  </code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> all </category>
          
      </categories>
      
      
        <tags>
            
            <tag> all </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue篇</title>
      <link href="/2020/05/28/vue/"/>
      <url>/2020/05/28/vue/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h2 id><a href="#" class="headerlink" title></a>    <div id="aplayer-NAbYloeq" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="497572729" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#C20C0C"></div></h2><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>之前用很多种方式总结过 Vue ,但是由于阶段性知识面的不同,总结方式也有所不同.所以打算换个方式结合工作在博客整理一下关于自己对 Vue 的一些使用心得.</p><footer><strong>喧嚣</strong><cite><a href="https://cn.vuejs.org/v2/guide/" target="_blank" rel="noopener">Vue</a></cite></footer></blockquote><h2 id="组件传参方式"><a href="#组件传参方式" class="headerlink" title="组件传参方式"></a>组件传参方式</h2><h4 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a><strong>v-bind</strong></h4><h5 id="v-bind-父向子"><a href="#v-bind-父向子" class="headerlink" title="v-bind 父向子"></a>v-bind 父向子</h5><ul><li><p><strong>父组件</strong></p><pre>     <code class="language-js">< parent-component :data="data" > < /parent-component>     </code></pre></li></ul><ul><li><p><strong>子组件</strong></p>  <pre>     <code class="language-js">props: {  data: {    type: Object,  //多种数据类型    default: function() {      return {}; //未接受参数默认返回值    }  }}     </code></pre></li></ul><h5 id="v-bind-子向父"><a href="#v-bind-子向父" class="headerlink" title="v-bind 子向父"></a>v-bind 子向父</h5><ul><li><p><strong>父组件</strong></p><pre>     <code class="language-js">@: html  < parent-component @fun="fun" > < /parent-component>@: js  fun(value){    }     </code></pre></li><li><p><strong>子组件</strong></p>  <pre>     <code class="language-js"> @: js   this.$emit('fun',params)     </code></pre></li></ul><hr><h4 id="v-modal"><a href="#v-modal" class="headerlink" title="v-modal"></a><strong>v-modal</strong></h4><h5 id="v-modal-父向子-写法一"><a href="#v-modal-父向子-写法一" class="headerlink" title="v-modal 父向子 (写法一)"></a>v-modal 父向子 (写法一)</h5><ul><li><p><strong>父组件</strong></p><pre>     <code class="language-js">< parent-component  v-model="data" > < /parent-component>     </code></pre></li></ul><ul><li><p><strong>子组件</strong></p>  <pre>     <code class="language-js">props: {  value: {  //必须是value    type: Object,    default: function() {      return {};    }  }}     </code></pre></li></ul><h5 id="v-modal-子向父"><a href="#v-modal-子向父" class="headerlink" title="v-modal 子向父"></a>v-modal 子向父</h5><ul><li><p><strong>子组件</strong></p>  <pre>     <code class="language-js"> <label style="color:red; font-weight: 900; display:inline-block; width:150px; height:30px; background-color: #2d8cf0;">@: js</label>   this.$emit("input",params)  //必须是input     </code></pre></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue,JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Echarts</title>
      <link href="/2020/04/28/ECharts/"/>
      <url>/2020/04/28/ECharts/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h2 id="javaScript"><a href="#javaScript" class="headerlink" title="javaScript"></a>javaScript</h2><hr><pre>  <code class="language-css">    </code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> Echarts </category>
          
          <category> Charts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Echarts,Charts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ant-design</title>
      <link href="/2020/04/28/ant-design/"/>
      <url>/2020/04/28/ant-design/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h2 id="javaScript"><a href="#javaScript" class="headerlink" title="javaScript"></a>javaScript</h2><hr><pre>  <code class="language-css">    </code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> ant-design </category>
          
          <category> UI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ant-design,UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iview</title>
      <link href="/2020/04/28/iview/"/>
      <url>/2020/04/28/iview/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><p>##</p><hr><pre>  <code class="language-css">    </code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> iview </category>
          
          <category> UI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iview,UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript</title>
      <link href="/2020/04/28/javaScript/"/>
      <url>/2020/04/28/javaScript/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><hr><!-- # **个人总结**## **Es6 ^** --><img src="/assets/img/wife.jpg" class="[class names]" width="500" height="500" title="title text" alt="alt text" loading="lazy"><!-- ![Audits - Lighthouse](/assets/img/wife.jpg) _注释_ --><pre>  <code class="language-js">    var a=[]    </code></pre><pre>  <code class="language-css">    p { color: red }    </code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript,JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mqtt</title>
      <link href="/2020/04/28/mqtt-for-vue/"/>
      <url>/2020/04/28/mqtt-for-vue/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h2 id="javaScript"><a href="#javaScript" class="headerlink" title="javaScript"></a>javaScript</h2><hr><pre>  <code class="language-css">    </code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> Mqtt </category>
          
          <category> 消息队列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mqtt,消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript</title>
      <link href="/2020/04/28/typeScript/"/>
      <url>/2020/04/28/typeScript/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><h2 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h2><hr><pre>  <code class="language-css">    </code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> TypeScript </category>
          
          <category> TS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TypeScript,TS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS篇</title>
      <link href="/2020/04/28/css/"/>
      <url>/2020/04/28/css/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script>    <div id="aplayer-ioAJbHrJ" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="497572729" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#C20C0C"></div><h1 id="flex-布局"><a href="#flex-布局" class="headerlink" title="flex 布局"></a>flex 布局</h1><blockquote><p>本文部分资料引至阮一峰网络日志,仅限于个人使用.</p><footer><strong>如果你想知道更多,也许可以参考?</strong><cite><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener">阮一峰</a></cite></footer></blockquote><h2 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h2><ul><li><p><strong>指定弹性盒子</strong></p><blockquote><p><strong>display</strong> 指定元素为弹性容器(可以是行内块)</p><footer><strong>属性值 flex;</strong></footer></blockquote>   <pre>   <code class="language-css">   .box{      display: flex;   }   @ : 设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。   </code>  </pre></li></ul><h3 id="主轴对齐"><a href="#主轴对齐" class="headerlink" title="主轴对齐"></a>主轴对齐</h3><ul><li><p><strong>主轴对齐</strong></p><blockquote><p><strong>justify-content</strong> 主轴(默认横向)对齐方式</p><footer><strong>属性值 flex-start | flex-end | center | space-between | space-around ;</strong></footer></blockquote><p><img src="/img/css-attribute-justify-content.png" alt="Audits - Lighthouse" loading="lazy"> <em>引用阮一峰的网络日志</em></p>   <pre>  <code class="language-css">       .box{          display: flex;          justify-content:flex-start;     @ : (默认值)沿着主轴左侧对齐          justify-content:flex-end;       @ : 沿着主轴右侧对齐          justify-content:center;         @ : 沿着主轴中间对齐          justify-content:space-between;  @ : 贴合左右两端对齐, 子元素间隔相同          justify-content:space-around;   @ : 贴合左右两端对齐,但是保留一定边框间隔, 子元素间隔相同大于边框间隔       }       </code>      </pre></li></ul><h3 id="交叉轴对齐"><a href="#交叉轴对齐" class="headerlink" title="交叉轴对齐"></a>交叉轴对齐</h3><ul><li><p><strong>交叉轴对齐</strong></p><blockquote><p><strong>align-items</strong> 主轴(默认横向)对齐方式</p><footer><strong>属性值 flex-start | flex-end | center | baseline | stretch ;</strong></footer></blockquote><p><img src="/img/css-attribute-align-items.png" alt="Audits - Lighthouse" loading="lazy"> <em>引用阮一峰的网络日志</em></p>   <pre>  <code class="language-css">       .box{          display: flex;          align-items:flex-start;    @ : (默认值)沿着主轴左侧对齐          align-items:flex-end;      @ : 沿着主轴右侧对齐          align-items:center;        @ : 沿着主轴中间对齐          align-items:baseline;      @ : 项目的第一行文字的基线对齐。          align-items:stretch;       @ : 如果子元素未设置高度或设为auto，将占满整个容器的高度。       }       </code>      </pre></li></ul><h3 id="改变主轴方向"><a href="#改变主轴方向" class="headerlink" title="改变主轴方向"></a>改变主轴方向</h3><ul><li><p><strong>改变主轴方向</strong></p><blockquote><p><strong>flex-direction</strong> 改变主轴方向</p><footer><strong>属性值 row | row-reverse | column | column-reverse ;</strong></footer></blockquote><p><img src="/img/css-attribute-flex-direction.png" alt="Audits - Lighthouse" loading="lazy"> <em>引用阮一峰的网络日志</em></p>   <pre>  <code class="language-css">       .box{          display: flex;          flex-direction:row;              @ : (默认值)主轴为水平方向，起点在左端。          flex-direction:row-reverse;      @ : 主轴为水平方向，起点在右端。          flex-direction:column;           @ : 主轴为垂直方向，起点在顶部。          flex-direction:column-reverse;   @ : 主轴为垂直方向，起点在底部。       }       </code>      </pre></li></ul><h3 id="弹性元素折行"><a href="#弹性元素折行" class="headerlink" title="弹性元素折行"></a>弹性元素折行</h3><ul><li><p><strong>弹性元素折行</strong></p><blockquote><p><strong>flex-wrap</strong> 如果弹性子元素宽度超过父级, 可以通过 <em>flex-wrap</em> 控制他们是否在父元素中折行</p><footer><strong>属性值 nowrap | wrap | wrap-reverse ;</strong></footer></blockquote><p><img src="/img/css-attribute-nowrap.png" alt="Audits - Lighthouse" loading="lazy"> <em>引用阮一峰的网络日志 nowrap</em><br><img src="/img/css-attribute-wrap.png" alt="Audits - Lighthouse" loading="lazy"> <em>引用阮一峰的网络日志 wrap</em><br><img src="/img/css-attribute-wrap-reverse.png" alt="Audits - Lighthouse" loading="lazy"> <em>引用阮一峰的网络日志 wrap-reverse</em></p>   <pre>  <code class="language-css">       .box{          display: flex;          flex-wrap:nowrap;              @ : (默认值)不折行。          flex-wrap:wrap;                @ : 折行, 第一行在顶部。          flex-wrap:wrap-reverse;        @ : 折行, 第一行在底部。       }       </code>      </pre></li></ul><h3 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h3><ul><li><p><strong>简写</strong></p><blockquote><p><strong>flex-flow</strong> 属性是 flex-direction 属性和 flex-wrap 属性的简写形式，默认值为 row nowrap。</p><footer><strong>属性值 flex-direction || flex-wrap ;</strong></footer></blockquote>  <pre>  <code class="language-css">       .box{          display: flex;          flex-flow:row nowrap;     @ : (默认值)主轴为水平方向,起点在左侧 不折行。       }  </code>  </pre><blockquote><p><strong>flex</strong> 属性是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto。后两个属性可选。</p><footer><strong>属性值 none | flex-grow flex-shrink? || flex-basis ;</strong></footer></blockquote>  <pre>  <code class="language-css">       .box{          display: flex;          flex:row 1 1 auto;     @ : 放大1,缩小1,平均占比父容器          该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。          建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。       }  </code>  </pre></li></ul><h3 id="放大比例"><a href="#放大比例" class="headerlink" title="放大比例"></a>放大比例</h3><ul><li><p><strong>放大比例</strong></p><blockquote><p><strong>flex-grow</strong> 为 0 时元素消失 空间被其他元素平均分配(值越大占比越大)。</p><footer><strong>属性值 整数 ;</strong></footer></blockquote><p><img src="/img/css-attribute-flex-grow.png" alt="Audits - Lighthouse" loading="lazy"> <em>引用阮一峰的网络日志</em></p>  <pre>  <code class="language-css">       .box{          display: flex;          .item1{            flex-grow: 1; /* default 0 */          }          .item2{            flex-grow: 2; /* default 0 */          }       }  </code>  </pre></li></ul><h3 id="缩小比例"><a href="#缩小比例" class="headerlink" title="缩小比例"></a>缩小比例</h3><ul><li><p><strong>缩小比例</strong></p><blockquote><p><strong>flex-shrink</strong> 为 0 时根据元素的个数平均占比填充父容器空间(值越大占比越小)。</p><footer><strong>属性值 整数 ;</strong></footer></blockquote><p><img src="/img/css-attribute-flex-shrink.jpg" alt="Audits - Lighthouse" loading="lazy"> <em>引用阮一峰的网络日志</em></p>  <pre>  <code class="language-css">       .box{          display: flex;          .item1{            flex-shrink: 1; /* default 1 */          }          .item2{            flex-shrink: 2; /* default 1 */          }       }  </code>  </pre></li></ul><h3 id="单独对齐"><a href="#单独对齐" class="headerlink" title="单独对齐"></a>单独对齐</h3><ul><li><p><strong>单独对齐</strong></p><blockquote><p><strong>align-self</strong> 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch。</p><footer><strong>属性值 auto | flex-start | flex-end | center | baseline | stretch ;</strong></footer></blockquote><p><img src="/img/css-attribute-align-self.png" alt="Audits - Lighthouse" loading="lazy"> <em>引用阮一峰的网络日志</em></p>  <pre>  <code class="language-css">       .box{          display: flex;          .item1{            align-self: flex-start; /* default auto */     @ : 单独交叉轴顶部对齐          }          .item2{            align-self: flex-end; /* default auto */       @ : 单独交叉轴底部对齐          }          .item2{            align-self: center; /* default auto */         @ : 单独交叉轴居中          }          .item2{            align-self: baseline; /* default auto */       @ : 单独交叉轴填充          }          .item2{            align-self: stretch; /* default auto */        @ : 单独交叉轴基线对齐          }       }  </code>  </pre></li></ul><h3 id="显示顺序"><a href="#显示顺序" class="headerlink" title="显示顺序"></a>显示顺序</h3><ul><li><p><strong>显示顺序</strong></p><blockquote><p><strong>order</strong> 属性定义项目的排列顺序。数值越小，排列越靠前，默认为 0。</p><footer><strong>属性值 整数可以是负值 ;</strong></footer></blockquote><p><img src="/img/css-attribute-order.png" alt="avatar" loading="lazy"> <em>引用阮一峰的网络日志 wrap-reverse</em></p><pre><code class="language-css">         .box{            display: flex;            .item1{              order: -1            }            .item2{              order: 1            }         }    </code>    </pre></li></ul><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><h3 id="场景一"><a href="#场景一" class="headerlink" title="场景一"></a>场景一</h3><ul><li><p>场景一</p><blockquote><p>需求: 做一个高度不写死,内容占容器 5/1 ,并且自动折行,自动居中 的卡贴选择器</p></blockquote></li></ul><img src="/img/css-scene-1.png" class="[class names]" width="500" height="500" title="title text" alt="alt text" loading="lazy"><pre>  <code class="language-css">div{    display: flex;            @ : 指定弹性容器    flex-wrap: wrap;          @ : 自动换行    justify-content: center;  @ : 自动居中    span{        flex-basis: 20%;      @ : 设置子元素占用父元素宽度    }}注意:设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。    </code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Style </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/2020/04/28/hexo/"/>
      <url>/2020/04/28/hexo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@latest/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1/dist/Meting.min.js"></script><hr><!-- # **个人总结**## **Es6 ^** --><p><img src="/img/%E8%89%BE%E7%B1%B3%E4%B8%BD%E5%A8%85.JPG" alt="Audits - Lighthouse" loading="lazy"> <em>从零开始的异世界生活</em></p><!-- ![Audits - Lighthouse](/assets/img/wife.jpg) _注释_ --><pre>  <code class="language-js">    var a=[]    </code></pre><pre>  <code class="language-css">    p { color: red }    </code></pre><hr>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript,JS </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
